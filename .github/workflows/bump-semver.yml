# bump the semver version in the pyproject.toml and addon.json files
# when a PR is merged on main and push the commit automatically
# push a tag as well

name: bump-semver

on:
  pull_request:
    types:
      - opened
      - edited
      - synchronize
      - reopened

permissions:
  contents: write # allow pushing commits/tags and creating releases
  pull-requests: write # allow creating pull requests

jobs:
  bump-semver-version-number:
    # Only act when the title starts with the prefixes
    if: |
      startsWith(github.event.pull_request.title, 'major:') ||
      startsWith(github.event.pull_request.title, 'minor:') ||
      startsWith(github.event.pull_request.title, 'patch:')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Determine bump kind from PR title
        id: kind
        run: |
          TITLE="${{ github.event.pull_request.title }}"
          case "$TITLE" in
            major:\ *) echo "kind=major" >> $GITHUB_OUTPUT ;;
            minor:\ *) echo "kind=minor" >> $GITHUB_OUTPUT ;;
            patch:\ *) echo "kind=patch" >> $GITHUB_OUTPUT ;;
          esac

      - name: Skip if already bumped in last commit
        id: skip
        run: |
          if git log -1 --pretty=%s | grep -q 'chore(release): v'; then
            echo "skip=true" >> $GITHUB_OUTPUT
          fi

      - name: Bump files
        if: steps.skip.outputs.skip != 'true'
        run: |
          python scripts/bump_version.py "${{ steps.kind.outputs.kind }}" > .version
          echo "VERSION=$(cat .version)" >> $GITHUB_ENV

      - name: Commit bump to PR branch
        if: steps.skip.outputs.skip != 'true'
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add pyproject.toml
          if [ -f code_syntax_highlighting/addon.json ]; then git add code_syntax_highlighting/addon.json; fi
          git commit -m "chore(release): v${VERSION}"
          git push origin HEAD:${{ github.event.pull_request.head.ref }}
